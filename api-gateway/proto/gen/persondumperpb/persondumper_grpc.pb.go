// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v6.30.2
// source: persondumper.proto

package persondumperpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PersonsDumper_TriggerFullSync_FullMethodName   = "/personsdumper.v1.PersonsDumper/TriggerFullSync"
	PersonsDumper_TriggerSchoolSync_FullMethodName = "/personsdumper.v1.PersonsDumper/TriggerSchoolSync"
	PersonsDumper_GetSyncRuns_FullMethodName       = "/personsdumper.v1.PersonsDumper/GetSyncRuns"
)

// PersonsDumperClient is the client API for PersonsDumper service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PersonsDumperClient interface {
	TriggerFullSync(ctx context.Context, in *TriggerFullSyncRequest, opts ...grpc.CallOption) (*TriggerFullSyncResponse, error)
	TriggerSchoolSync(ctx context.Context, in *TriggerSchoolSyncRequest, opts ...grpc.CallOption) (*TriggerSchoolSyncResponse, error)
	GetSyncRuns(ctx context.Context, in *GetSyncRunsRequest, opts ...grpc.CallOption) (*GetSyncRunsResponse, error)
}

type personsDumperClient struct {
	cc grpc.ClientConnInterface
}

func NewPersonsDumperClient(cc grpc.ClientConnInterface) PersonsDumperClient {
	return &personsDumperClient{cc}
}

func (c *personsDumperClient) TriggerFullSync(ctx context.Context, in *TriggerFullSyncRequest, opts ...grpc.CallOption) (*TriggerFullSyncResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TriggerFullSyncResponse)
	err := c.cc.Invoke(ctx, PersonsDumper_TriggerFullSync_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personsDumperClient) TriggerSchoolSync(ctx context.Context, in *TriggerSchoolSyncRequest, opts ...grpc.CallOption) (*TriggerSchoolSyncResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(TriggerSchoolSyncResponse)
	err := c.cc.Invoke(ctx, PersonsDumper_TriggerSchoolSync_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *personsDumperClient) GetSyncRuns(ctx context.Context, in *GetSyncRunsRequest, opts ...grpc.CallOption) (*GetSyncRunsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSyncRunsResponse)
	err := c.cc.Invoke(ctx, PersonsDumper_GetSyncRuns_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PersonsDumperServer is the server API for PersonsDumper service.
// All implementations must embed UnimplementedPersonsDumperServer
// for forward compatibility.
type PersonsDumperServer interface {
	TriggerFullSync(context.Context, *TriggerFullSyncRequest) (*TriggerFullSyncResponse, error)
	TriggerSchoolSync(context.Context, *TriggerSchoolSyncRequest) (*TriggerSchoolSyncResponse, error)
	GetSyncRuns(context.Context, *GetSyncRunsRequest) (*GetSyncRunsResponse, error)
	mustEmbedUnimplementedPersonsDumperServer()
}

// UnimplementedPersonsDumperServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPersonsDumperServer struct{}

func (UnimplementedPersonsDumperServer) TriggerFullSync(context.Context, *TriggerFullSyncRequest) (*TriggerFullSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerFullSync not implemented")
}
func (UnimplementedPersonsDumperServer) TriggerSchoolSync(context.Context, *TriggerSchoolSyncRequest) (*TriggerSchoolSyncResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerSchoolSync not implemented")
}
func (UnimplementedPersonsDumperServer) GetSyncRuns(context.Context, *GetSyncRunsRequest) (*GetSyncRunsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSyncRuns not implemented")
}
func (UnimplementedPersonsDumperServer) mustEmbedUnimplementedPersonsDumperServer() {}
func (UnimplementedPersonsDumperServer) testEmbeddedByValue()                       {}

// UnsafePersonsDumperServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PersonsDumperServer will
// result in compilation errors.
type UnsafePersonsDumperServer interface {
	mustEmbedUnimplementedPersonsDumperServer()
}

func RegisterPersonsDumperServer(s grpc.ServiceRegistrar, srv PersonsDumperServer) {
	// If the following call pancis, it indicates UnimplementedPersonsDumperServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PersonsDumper_ServiceDesc, srv)
}

func _PersonsDumper_TriggerFullSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerFullSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonsDumperServer).TriggerFullSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PersonsDumper_TriggerFullSync_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonsDumperServer).TriggerFullSync(ctx, req.(*TriggerFullSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonsDumper_TriggerSchoolSync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerSchoolSyncRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonsDumperServer).TriggerSchoolSync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PersonsDumper_TriggerSchoolSync_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonsDumperServer).TriggerSchoolSync(ctx, req.(*TriggerSchoolSyncRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PersonsDumper_GetSyncRuns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSyncRunsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PersonsDumperServer).GetSyncRuns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PersonsDumper_GetSyncRuns_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PersonsDumperServer).GetSyncRuns(ctx, req.(*GetSyncRunsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PersonsDumper_ServiceDesc is the grpc.ServiceDesc for PersonsDumper service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PersonsDumper_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "personsdumper.v1.PersonsDumper",
	HandlerType: (*PersonsDumperServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TriggerFullSync",
			Handler:    _PersonsDumper_TriggerFullSync_Handler,
		},
		{
			MethodName: "TriggerSchoolSync",
			Handler:    _PersonsDumper_TriggerSchoolSync_Handler,
		},
		{
			MethodName: "GetSyncRuns",
			Handler:    _PersonsDumper_GetSyncRuns_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "persondumper.proto",
}
